#include <Windows.h>
#include <iostream>
#include <filesystem> // to use<filesystem> configure project in c++17




void EnumDll(const wchar_t* directory)
{
    // Construct the search pattern
    wchar_t searchPattern[MAX_PATH];
    wcscpy_s(searchPattern, directory);
    namespace fs = std::filesystem;
    wcscat_s(searchPattern, L"\\*");

    WIN32_FIND_DATAW FindFileData;
    HANDLE hFind = FindFirstFileExW(searchPattern, FindExInfoStandard, &FindFileData, FindExSearchNameMatch, NULL, 0);

    if (hFind != INVALID_HANDLE_VALUE)
    {
        do
        {

            if (FindFileData.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY)
            {

                if (wcscmp(FindFileData.cFileName, L".") != 0 && wcscmp(FindFileData.cFileName, L"..") != 0)
                {
                    // Construct the subdirectory path
                    wchar_t subDirectory[MAX_PATH];
                    wcscpy_s(subDirectory, directory);
                    wcscat_s(subDirectory, L"\\");
                    wcscat_s(subDirectory, FindFileData.cFileName);


                    EnumDll(subDirectory);
                }
            }
            else
            {

                if (fs::path(FindFileData.cFileName).extension() == L".dll")
                {

                    wchar_t filePath[MAX_PATH];
                    wcscpy_s(filePath, directory);
                    wcscat_s(filePath, L"\\");
                    wcscat_s(filePath, FindFileData.cFileName);
                    std::wcout << filePath << std::endl;

                    Sleep(5000);
                }
            }
        } while (FindNextFileW(hFind, &FindFileData));


        FindClose(hFind);
    }
}

int main()
{
    EnumDll(L"C:\\Windows");

    return 0;
}