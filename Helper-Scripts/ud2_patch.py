from elftools.elf.elffile import ELFFile

def patch_ud2(file_path):
    with open(file_path, 'r+b') as f:
        elf_file = ELFFile(f)
        main_symbol = next((s for s in elf_file.get_section_by_name('.symtab').iter_symbols() if s.name == 'main'), None)
        if main_symbol is not None and main_symbol['st_size'] > 0:
            main_address = main_symbol['st_value']
            main_size = main_symbol['st_size']
            f.seek(main_address)
            main_bytes = f.read(main_size)
            for offset, byte in enumerate(main_bytes[:-1]):
                if byte == 0x0f and main_bytes[offset+1] == 0x0b:
                    f.seek(main_address + offset)
                    f.write(b'\x90\x90')

if __name__ == '__main__':
    patch_ud2('/patch/to/ELF')

