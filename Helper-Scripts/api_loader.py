# this is basically the same shit https://github.com/embee-research/Qakbot/blob/main/qakbot_api_resolver.py
import os
import pefile
from pathlib import Path
import pathlib
import ntpath
import zlib

xor_key = 0x38ba5c7b 
# Hashed API names collected from Dridex
api_list = ["0x1daacbb7",
"0x1daacbb7",
"0xa8d05acb",
"0x755128fe",
"0x1be15feb",
"0x0a1ee59b",
"0xe10858ef",
"0x4c00b324",
"0xc4d11e8a",
"0xf3af54a7",
"0x643f303c",
"0x3b4caff7",
"0x649746ec",
"0x34e877b5",
"0xf95c938e",
"0x8bfccac9",
"0x35b39b2b",
"0x7be03c70",
"0xc054dc97",
"0xa65417fb",
"0x9cac62c7",
"0xa8f2638d",
"0xea812079",
"0xd8cc7390",
"0xd16c9225",
"0xe5ef1afa",
"0x58d59bc9",
"0xe9fbf3a8",
"0xbcd9ca71",
"0x4faea65b",
"0xc0b67de0",
"0x996e050f",
"0x81c9e4a7",
"0x97abe05f",
"0x82d274c4",
"0x077be1f6",
"0xe2d27ff4",
"0x69121530",
"0xf1c64384",
"0xd90e9ce8",
"0xf9b72199",
"0x90eb856d",
"0x93fae3f6",
"0xb7186560",
"0x80eeda84",
"0x02a01082",
"0x813508bf",
"0x78757b46",
"0xa3873ddb",
"0xf949e40d",
"0x1b316d6f",
"0x6182260d",
"0x41195991",
"0xe2aa12c0",
"0xb5cdecc0",
"0xb9986e69",
"0x6a68465a",
"0xa6df3111",
"0x43bd89bd",
"0xe4098524",
"0xb8566b51",
"0x6f4b2710",
"0xa23ab9f2",
"0x4a4b4242",
"0x05790ac4",
"0x4a4a4f27",
"0x9ef5e083",
"0x9955b552",
"0x193a1678",
"0xd77db60f",
"0x9f411d1e",
"0x31e65fab",
"0xf4530a69",
"0xff8becc4",
"0xd9057e28",
"0x5df582e1",
"0x4d235f87",
"0xed971b31",
"0x828ca066",
"0x91935d4e",
"0x0d5493f9",
"0x98bb8ab2",
"0xf561ae8b",
"0x31fb9d90",
"0x8883f185",
"0x9e00e4e7",
"0x7c5744d4",
"0x6ad451b6",
"0x77b7f7e2",
"0x87208d61",
"0x01b51bda",
"0xe091aae1",
"0xcf43c481",
"0xb949c062",
"0x642cc78f",
"0xef367bc4",
"0xe349ddce",
"0x24700f86",
"0xac46ecbb",
"0xaf477fe3",
"0xea98589f",
"0x004fccc0",
"0xc4879567",
"0xc19ea29c",
"0xe541bc4f",
"0xf5e9a9a6",
"0x28bc3354",
"0x692332e2",
"0x7b0e3dd6",
"0xe1167828",
"0xc928f867",
"0xc3c81127",
"0xc27df3b5",
"0x06b2abf0",
"0x1f55daa4",
"0x2a9e90cd",
"0x36e9be29",
"0xf341891c",
"0x790989c4",
"0x21d14ca0",
"0x60a7ee2b",
"0x42b05860",
"0x8a156a0e",
"0xe2acf446",
"0xdda3415f",
"0xe214cde",
"0x8813e141",
"0x863455c4",
"0x9217c72",
"0x336e58dc",
"0xcedbd48c",
"0xb8153e9a"]

class Err(Exception):
    print("some bullshit happened")
    pass 

def getExportList(path_list):
    pe = pefile.PE(path_list)
    d = [pefile.DIRECTORY_ENTRY["IMAGE_DIRECTORY_ENTRY_EXPORT"]]
    pe.parse_data_directories(directories=d)
    exports = [(e.name) for e in pe.DIRECTORY_ENTRY_EXPORT.symbols]
    return exports

def buildPathList():
    path_list = []   
    rootdir = '/Windows/SysWOW64'
    for subdir, dirs, files in os.walk(rootdir):
        for filename in files:
            try:
                if filename.endswith(".dll"):
                    paths = os.path.join(subdir,filename)
                    full_path = paths.replace(ntpath.sep, pathlib.posixpath.sep)
                    path_list.append(full_path)
                    #print(path_list)
            except:
                continue
    return path_list

def buildHashList(dll_list):
    exports_main_list = []
    for filename in dll_list:
        try:
            exports_main_list += getExportList(filename)
        except:
            continue
    return exports_main_list

        
  #run crc32 on exports      
#for i in export_list:
 # t = zlib.crc32(i)
  #xor = t ^ xor_key
  #final = hex(xor)
  #print(final)
  #if final in api_list:
   # print(final, i)

# add list of hashed api names collected from Dridex
#api_list = []
